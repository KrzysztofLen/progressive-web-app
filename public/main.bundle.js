!function(Q){function t(c){if(F[c])return F[c].exports;var B=F[c]={i:c,l:!1,exports:{}};return Q[c].call(B.exports,B,B.exports,t),B.l=!0,B.exports}var F={};t.m=Q,t.c=F,t.d=function(Q,F,c){t.o(Q,F)||Object.defineProperty(Q,F,{configurable:!1,enumerable:!0,get:c})},t.n=function(Q){var F=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return t.d(F,"a",F),F},t.o=function(Q,t){return Object.prototype.hasOwnProperty.call(Q,t)},t.p="",t(t.s=1)}([function(module,exports,__webpack_require__){"use strict";eval("\n\n// const dbPromise = idb.open('contacts-store', 1, (db) => { // eslint-disable-line no-undef\n// \tif (!db.objectStoreNames.contains('contacts')) {\n// \t\tdb.createObjectStore('contacts', {\tkeyPath: 'id'\t});\n// \t}\n\n// \tif (!db.objectStoreNames.contains('sync-contacts')) {\n// \t\tdb.createObjectStore('sync-contacts', {\tkeyPath: 'id'\t});\n// \t}\n// });\n\n// # TODO Figure it out how import method\n// const idbKeyval = {\n// \tget: (st) => {\n// \t\treturn dbPromise\n// \t\t\t.then((db) => {\n// \t\t\t\treturn db.transaction(st, 'readonly')\n// \t\t\t\t\t.objectStore(st).getAll();\n// \t\t\t});\n// \t},\n// \tset: (st, data) => {\n// \t\treturn dbPromise\n// \t\t\t.then((db) => {\n// \t\t\t\tconst tx = db.transaction(st, 'readwrite');\n// \t\t\t\tlet store = tx.objectStore(st);\n// \t\t\t\tstore.put(data);\n// \t\t\t\treturn tx.complete;\n// \t\t\t});\n// \t},\n// \tclear: (st) => {\n// \t\treturn dbPromise\n// \t\t\t.then((db) => {\n// \t\t\t\tconst tx = db.transaction(st, 'readwrite');\n// \t\t\t\tconst store = tx.objectStore(st);\n// \t\t\t\tstore.clear();\n// \t\t\t\treturn tx.complete;\n// \t\t\t});\n// \t},\n// \tdelete: (st, id) => {\n// \t\treturn dbPromise\n// \t\t\t.then((db) => {\n// \t\t\t\tconst tx = db.transaction(st, 'readwrite');\n// \t\t\t\tconst store = tx.objectStore(st);\n// \t\t\t\tstore.delete(id);\n// \t\t\t\treturn tx.complete;\n// \t\t\t});\n// \t}\n// };\n\n// const setAllData = (st, data) => { // eslint-disable-line no-unused-vars\n// \treturn dbPromise\n// \t\t.then((db) => {\n// \t\t\tconst tx = db.transaction(st, 'readwrite');\n// \t\t\tconst store = tx.objectStore(st);\n// \t\t\tstore.put(data);\n// \t\t\treturn tx.complete;\n// \t\t});\n// };\n\n// function getAllData(st) { // eslint-disable-line no-unused-vars\n// \treturn dbPromise\n// \t\t.then((db) => {\n// \t\t\tconst tx = db.transaction(st, 'readonly');\n// \t\t\tconst store = tx.objectStore(st);\n// \t\t\treturn store.getAll();\n// \t\t});\n// }\n\n// const clearAllData = (st) => { // eslint-disable-line no-unused-vars\n// \treturn dbPromise\n// \t\t.then((db) => {\n// \t\t\tconst tx = db.transaction(st, 'readwrite');\n// \t\t\tconst store = tx.objectStore(st);\n// \t\t\tstore.clear();\n// \t\t\treturn tx.complete;\n// \t\t});\n// };\n\n// const deleteItemFromDatabase = (st, id) => { // eslint-disable-line no-unused-vars\n// \treturn dbPromise\n// \t\t.then((db) => {\n// \t\t\tconst tx = db.transaction(st, 'readwrite');\n// \t\t\tconst store = tx.objectStore(st);\n// \t\t\tstore.delete(id);\n// \t\t\treturn tx.complete;\n// \t\t});\n// };\n\n/* eslint-disable */\nvar dbPromise = idb.open('contacts-store', 1, function (db) {\n\tif (!db.objectStoreNames.contains('contacts')) {\n\t\tdb.createObjectStore('contacts', { keyPath: 'id' });\n\t}\n\tif (!db.objectStoreNames.contains('sync-contacts')) {\n\t\tdb.createObjectStore('sync-contacts', { keyPath: 'id' });\n\t}\n});\n\nfunction setAllData(st, data) {\n\treturn dbPromise.then(function (db) {\n\t\tvar tx = db.transaction(st, 'readwrite');\n\t\tvar store = tx.objectStore(st);\n\t\tstore.put(data);\n\t\treturn tx.complete;\n\t});\n}\n\nfunction getAllData(st) {\n\treturn dbPromise.then(function (db) {\n\t\tvar tx = db.transaction(st, 'readonly');\n\t\tvar store = tx.objectStore(st);\n\t\treturn store.getAll();\n\t});\n}\n\nfunction clearAllData(st) {\n\treturn dbPromise.then(function (db) {\n\t\tvar tx = db.transaction(st, 'readwrite');\n\t\tvar store = tx.objectStore(st);\n\t\tstore.clear();\n\t\treturn tx.complete;\n\t});\n}\n\nfunction deleteItemFromDatabase(st, id) {\n\tdbPromise.then(function (db) {\n\t\tvar tx = db.transaction(st, 'readwrite');\n\t\tvar store = tx.objectStore(st);\n\t\tstore.delete(id);\n\t\treturn tx.complete;\n\t}).then(function () {\n\t\tconsole.log('Item deleted!');\n\t});\n}\n\nfunction urlBase64ToUint8Array(base64String) {\n\tvar padding = '='.repeat((4 - base64String.length % 4) % 4);\n\tvar base64 = (base64String + padding).replace(/\\-/g, '+').replace(/_/g, '/');\n\n\tvar rawData = window.atob(base64);\n\tvar outputArray = new Uint8Array(rawData.length);\n\n\tfor (var i = 0; i < rawData.length; ++i) {\n\t\toutputArray[i] = rawData.charCodeAt(i);\n\t}\n\treturn outputArray;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")},function(Q,t,F){Q.exports=F(2)},function(module,exports,__webpack_require__){"use strict";eval("\n\n__webpack_require__(0);\n\n__webpack_require__(3);\n\n__webpack_require__(4);\n\n__webpack_require__(13);\n\n__webpack_require__(5);\n\n__webpack_require__(11);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wdWJsaWMvc3JjL2luZGV4LmpzPzNlYzMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQSIsImZpbGUiOiIyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICcuL2pzL3V0aWxpdHkuanMnO1xuaW1wb3J0ICcuL2pzL21haW4uanMnO1xuaW1wb3J0ICcuL2pzL2FwcC5qcyc7XG5pbXBvcnQgJy4vanMvd2VhdGhlci5qcyc7XG5pbXBvcnQgJy4vY3NzL2FwcC5jc3MnO1xuaW1wb3J0ICcuL2Nzcy93ZWF0aGVyLmNzcyc7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9wdWJsaWMvc3JjL2luZGV4LmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\n__webpack_require__(0);\n\nvar shareImageButton = document.querySelector('#share-image-button'),\n    createPostArea = document.querySelector('#create-post'),\n    closeCreatePostModalButton = document.querySelector('#close-create-post-modal-btn'),\n    pwaContactsList = document.querySelector('#pwa-contacts-list'),\n    form = document.querySelector('form'),\n    name = document.querySelector('#name'),\n    email = document.querySelector('#email'),\n    adress = document.querySelector('#adress'),\n    bitcoin = document.querySelector('#bitcoin');\n\nvar defferedPrompt = '';\n\nvar openCreatePostModal = function openCreatePostModal() {\n\tcreatePostArea.style.transform = 'translateY(0)';\n\n\tif (defferedPrompt) {\n\t\tdefferedPrompt.prompt();\n\n\t\tdefferedPrompt.userChoice.then(function (choiceResult) {\n\t\t\tconsole.log(choiceResult.outcome); // eslint-disable-line no-console\n\n\t\t\tif (choiceResult.outcome === 'dismissed') {\n\t\t\t\tconsole.log('User cancelled installation'); // eslint-disable-line no-console\n\t\t\t} else {\n\t\t\t\tconsole.log('User added to home screen'); // eslint-disable-line no-console\n\t\t\t}\n\t\t});\n\n\t\tdefferedPrompt = null;\n\t}\n\n\tshareImageButton.style.display = 'none';\n};\n\nwindow.addEventListener('beforeinstallprompt', function (event) {\n\tconsole.log('beforeinstallprompt fired'); // eslint-disable-line no-console\n\tevent.preventDefault();\n\tdefferedPrompt = event;\n\treturn false;\n});\n\nvar closeCreatePostModal = function closeCreatePostModal() {\n\tcreatePostArea.style.transform = 'translateY(100vh)';\n\tshareImageButton.style.display = 'block';\n};\n\nvar clearContact = function clearContact() {\n\twhile (pwaContactsList.hasChildNodes()) {\n\t\tpwaContactsList.removeChild(pwaContactsList.lastChild);\n\t}\n};\n\nvar createContact = function createContact(data) {\n\n\tvar cardWrapper = document.createElement('div');\n\tcardWrapper.className = 'demo-card-square mdl-card mdl-shadow--2dp';\n\n\tvar cardPersonName = document.createElement('div');\n\tcardPersonName.className = 'mdl-card__title mdl-card--expand';\n\tcardWrapper.appendChild(cardPersonName);\n\n\tvar personDataWrapper = document.createElement('span');\n\tpersonDataWrapper.className = 'mdl-list__item-primary-content';\n\tcardPersonName.appendChild(personDataWrapper);\n\n\tvar personIcon = document.createElement('i');\n\tpersonIcon.className = 'material-icons mdl-list__item-avatar';\n\tpersonIcon.textContent = 'person';\n\tpersonDataWrapper.appendChild(personIcon);\n\n\tvar personName = document.createElement('h4');\n\tpersonName.className = 'pwa-card-name__name-header';\n\tpersonName.textContent = data.name;\n\tpersonDataWrapper.appendChild(personName);\n\n\tvar personOtherData = document.createElement('div');\n\tpersonOtherData.className = 'mdl-card__supporting-text';\n\tcardWrapper.appendChild(personOtherData);\n\n\tvar spanLabelArray = [];\n\tvar spanDataArray = [];\n\n\tfor (var index = 0; index < 3; index++) {\n\t\tvar seperatingDiv = document.createElement('div');\n\t\tseperatingDiv.className = 'pwa-card-other-data-wrapper';\n\t\tpersonOtherData.appendChild(seperatingDiv);\n\n\t\tvar personOtherDataCardLabel = document.createElement('span');\n\t\tpersonOtherDataCardLabel.className = 'pwa-card-label';\n\t\tseperatingDiv.appendChild(personOtherDataCardLabel);\n\n\t\tvar personOtherDataCardData = document.createElement('span');\n\t\tpersonOtherDataCardData.className = 'mdl-list__item-sub-title';\n\t\tseperatingDiv.appendChild(personOtherDataCardData);\n\n\t\tspanDataArray.push(personOtherDataCardData);\n\t\tspanLabelArray.push(personOtherDataCardLabel);\n\t}\n\n\tspanLabelArray[1].textContent = 'adress: ';\n\tspanLabelArray[2].textContent = 'bitcoin: ';\n\tspanLabelArray[0].textContent = 'email: ';\n\n\tspanDataArray[0].textContent = data.email;\n\tspanDataArray[1].textContent = data.adress;\n\tspanDataArray[2].textContent = data.bitcoin;\n\n\tvar seperatingDivForImage = document.createElement('div');\n\tseperatingDivForImage.className = 'pwa-card-other-data-wrapper';\n\tpersonOtherData.appendChild(seperatingDivForImage);\n\n\tvar personOtherDataImage = document.createElement('img');\n\tpersonOtherDataImage.setAttribute('src', data.image);\n\tpersonOtherDataImage.setAttribute('alt', 'xyz');\n\tseperatingDivForImage.appendChild(personOtherDataImage);\n\n\tvar personDataOtherButtonWrapper = document.createElement('div');\n\tpersonDataOtherButtonWrapper.className = 'mdl-card__actions mdl-card--border';\n\tcardWrapper.appendChild(personDataOtherButtonWrapper);\n\n\tvar personDataOtherButton = document.createElement('button');\n\tpersonDataOtherButton.className = 'mdl-button mdl-js-button mdl-button--raised mdl-button--colored';\n\tpersonDataOtherButton.textContent = 'View';\n\tpersonDataOtherButtonWrapper.appendChild(personDataOtherButton);\n\n\tpwaContactsList.appendChild(cardWrapper);\n};\n\nshareImageButton.addEventListener('click', openCreatePostModal);\n\ncloseCreatePostModalButton.addEventListener('click', closeCreatePostModal);\n\nvar updateUI = function updateUI(data) {\n\tclearContact();\n\tfor (var index = 0; index < data.length; index++) {\n\t\tcreateContact(data[index]);\n\t}\n};\n\nvar url = 'https://pwa-app-72fbb.firebaseio.com/contacts.json';\nvar networkDataReceived = false;\n\nfetch(url).then(function (res) {\n\treturn res.json();\n}).then(function (data) {\n\tnetworkDataReceived = true;\n\tconsole.log('From web', data); // eslint-disable-line no-console\n\n\tvar dataArray = [];\n\n\tfor (var key in data) {\n\t\tdataArray.push(data[key]);\n\t}\n\n\tupdateUI(dataArray);\n});\n\nif ('indexedDB' in window) {\n\tgetAllData('contacts').then(function (data) {\n\t\tif (!networkDataReceived) {\n\t\t\tconsole.log('[From cache]', data); // eslint-disable-line no-console\n\t\t\tupdateUI(data);\n\t\t}\n\t});\n}\n\n// Send data imidiatly to backend\nvar sendData = function sendData() {\n\tfetch('https://us-central1-pwa-app-72fbb.cloudfunctions.net/storeContactsData', {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t\t'Accept': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\tid: new Date().toISOString(),\n\t\t\tname: name.value,\n\t\t\temail: email.value,\n\t\t\tadress: adress.value,\n\t\t\tbitcoin: bitcoin.value,\n\t\t\timage: 'https://firebasestorage.googleapis.com/v0/b/pwa-app-72fbb.appspot.com/o/brooke-lark-229136.jpg?alt=media&token=922238cc-7795-4316-ab1e-b32864c39f54'\n\t\t})\n\t}).then(function (res) {\n\t\tconsole.log('Sent data', res); // eslint-disable-line no-console\n\t\tupdateUI();\n\t});\n};\n\nform.addEventListener('submit', function (event) {\n\tevent.preventDefault();\n\tif (name.value.trim() === '' || email.value.trim() === '' || adress.value.trim() === '' || bitcoin.value.trim() === '') {\n\t\talert('Please enter valid data!');\n\t\treturn;\n\t}\n\n\tcloseCreatePostModal();\n\n\tif ('serviceWorker' in navigator && 'SyncManager' in window) {\n\t\tnavigator.serviceWorker.ready.then(function (sw) {\n\n\t\t\tvar contact = {\n\t\t\t\tid: new Date().toISOString(),\n\t\t\t\tname: name.value,\n\t\t\t\temail: email.value,\n\t\t\t\tadress: adress.value,\n\t\t\t\tbitcoin: bitcoin.value\n\t\t\t};\n\n\t\t\tsetAllData('sync-contacts', contact).then(function () {\n\t\t\t\treturn sw.sync.register('sync-new-contact');\n\t\t\t})\n\t\t\t// showing material message\n\t\t\t.then(function () {\n\t\t\t\tvar snackbarContainer = document.querySelector('#confirmation-toast');\n\t\t\t\tvar data = { message: 'Your Post was saved for syncing!' };\n\t\t\t\tsnackbarContainer.MaterialSnackbar.showSnackbar(data);\n\t\t\t}).catch(function (err) {\n\t\t\t\tconsole.log(err); // eslint-disable-line no-console\n\t\t\t});\n\t\t});\n\t} else {\n\t\tsendData();\n\t}\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar enableNotificationsButtons = document.querySelectorAll('.enable-notifications');\n\nif (!window.Promise) {\n\twindow.Promise = Promise; // eslint-disable-line no-undef\n}\n\nif ('serviceWorker' in navigator) {\n\tnavigator.serviceWorker.register('/serviceWorker.js').then(function () {\n\t\tconsole.log('Service worker registered!'); // eslint-disable-line no-console\n\t}).catch(function (err) {\n\t\tconsole.log(err); // eslint-disable-line no-console\n\t});\n}\n\nfunction urlBase64ToUint8Array(base64String) {\n\tvar padding = '='.repeat((4 - base64String.length % 4) % 4);\n\tvar base64 = (base64String + padding).replace(/\\-/g, '+').replace(/_/g, '/');\n\n\tvar rawData = window.atob(base64);\n\tvar outputArray = new Uint8Array(rawData.length);\n\n\tfor (var i = 0; i < rawData.length; ++i) {\n\t\toutputArray[i] = rawData.charCodeAt(i);\n\t}\n\treturn outputArray;\n}\n\nvar displayConfirmNotification = function displayConfirmNotification() {\n\tif ('serviceWorker' in navigator) {\n\t\tvar options = {\n\t\t\tbody: 'You successfully subscribed to our Notification service!',\n\t\t\ticon: '/src/images/icons/apple-icon-96x96.png',\n\t\t\tdir: 'ltr',\n\t\t\tlang: 'en-US',\n\t\t\tvibrate: [500, 110, 500, 110, 450, 110, 200, 110, 170, 40, 450, 110, 200, 110, 170, 40, 500],\n\t\t\tbadge: '/src/images/icons/apple-icon-96x96.png',\n\t\t\ttag: 'confirm-notification',\n\t\t\trenotify: true,\n\t\t\tactions: [{\n\t\t\t\taction: 'confirm',\n\t\t\t\ttitle: 'Yes',\n\t\t\t\ticon: '/src/images/icons/check.png'\n\t\t\t}, {\n\t\t\t\taction: 'cancel',\n\t\t\t\ttitle: 'No',\n\t\t\t\ticon: '/src/images/icons/close.png'\n\t\t\t}]\n\t\t};\n\n\t\tnavigator.serviceWorker.ready.then(function (swreg) {\n\t\t\tswreg.showNotification('Succesfully subscribed! (from SW)', options);\n\t\t});\n\t}\n};\n\nvar configurePushSub = function configurePushSub() {\n\tif (!('serviceWorker' in navigator)) {\n\t\treturn;\n\t}\n\n\tvar reg = void 0;\n\tnavigator.serviceWorker.ready.then(function (swreg) {\n\t\treg = swreg;\n\t\treturn swreg.pushManager.getSubscription();\n\t}).then(function (sub) {\n\t\tif (sub === null) {\n\t\t\t// Create a new subscription\n\t\t\tvar vapidPublicKey = 'BAUPeHt3kZqk4sF0HlrSs-zBP_E1AX0nQQiuB0SLXD5lhuh-YFWh69wPb6mX_mXVulzof3bMGmb73fczAnZILac';\n\t\t\tvar convertedVapidPublicKey = urlBase64ToUint8Array(vapidPublicKey);\n\n\t\t\treturn reg.pushManager.subscribe({\n\t\t\t\tuserVisibleOnly: true,\n\t\t\t\tapplicationServerKey: convertedVapidPublicKey\n\t\t\t});\n\t\t} else {\n\t\t\t// We have  a subscripion\n\t\t}\n\t}).then(function (newSubscription) {\n\t\treturn fetch('https://pwa-app-72fbb.firebaseio.com/subscription.json', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Accept': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify(newSubscription)\n\t\t});\n\t}).then(function (res) {\n\t\tif (res.ok) {\n\t\t\tdisplayConfirmNotification();\n\t\t}\n\t}).catch(function (err) {\n\t\tconsole.log(err); // eslint-disable-line no-console\n\t});\n};\n\nvar askForNotificationPermission = function askForNotificationPermission() {\n\tNotification.requestPermission().then(function (result) {\n\t\tconsole.log('[User Choice]', result); // eslint-disable-line no-console\n\t\tif (result !== 'granted') {\n\t\t\tconsole.log('[User Choice] : Notification Permission wasn\\'t granted.'); // eslint-disable-line no-console\n\t\t} else {\n\t\t\tconfigurePushSub();\n\t\t\t// displayConfirmNotification();\n\t\t}\n\t});\n};\n\n// check support\nif ('Notification' in window && 'serviceWorker' in navigator) {\n\tfor (var i = 0; i < enableNotificationsButtons.length; i++) {\n\t\tenableNotificationsButtons[i].style.display = 'inline-block';\n\t\tenableNotificationsButtons[i].addEventListener('click', askForNotificationPermission);\n\t}\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4\n")},function(module,exports,__webpack_require__){eval('// removed by extract-text-webpack-plugin\n    if(false) {\n      // 1507396062088\n      var cssReload = require("../../../node_modules/css-hot-loader/hotModuleReplacement.js")(module.id, {"fileMap":"{fileName}"});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wdWJsaWMvc3JjL2Nzcy9hcHAuY3NzP2UwNWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0EsMEdBQTBHLFlBQVksU0FBUyxFQUFFO0FBQ2pJO0FBQ0E7QUFDQSIsImZpbGUiOiI1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICAvLyAxNTA3Mzk2MDYyMDg4XG4gICAgICB2YXIgY3NzUmVsb2FkID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtaG90LWxvYWRlci9ob3RNb2R1bGVSZXBsYWNlbWVudC5qc1wiKShtb2R1bGUuaWQsIHtcImZpbGVNYXBcIjpcIntmaWxlTmFtZX1cIn0pO1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGNzc1JlbG9hZCk7XG4gICAgICBtb2R1bGUuaG90LmFjY2VwdCh1bmRlZmluZWQsIGNzc1JlbG9hZCk7XG4gICAgfVxuICBcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3B1YmxpYy9zcmMvY3NzL2FwcC5jc3Ncbi8vIG1vZHVsZSBpZCA9IDVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///5\n')},,,,,,function(module,exports,__webpack_require__){eval('// removed by extract-text-webpack-plugin\n    if(false) {\n      // 1507396002032\n      var cssReload = require("../../../node_modules/css-hot-loader/hotModuleReplacement.js")(module.id, {"fileMap":"{fileName}"});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wdWJsaWMvc3JjL2Nzcy93ZWF0aGVyLmNzcz84NzNlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBLDBHQUEwRyxZQUFZLFNBQVMsRUFBRTtBQUNqSTtBQUNBO0FBQ0EiLCJmaWxlIjoiMTEuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIC8vIDE1MDczOTYwMDIwMzJcbiAgICAgIHZhciBjc3NSZWxvYWQgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1ob3QtbG9hZGVyL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wiZmlsZU1hcFwiOlwie2ZpbGVOYW1lfVwifSk7XG4gICAgICBtb2R1bGUuaG90LmRpc3Bvc2UoY3NzUmVsb2FkKTtcbiAgICAgIG1vZHVsZS5ob3QuYWNjZXB0KHVuZGVmaW5lZCwgY3NzUmVsb2FkKTtcbiAgICB9XG4gIFxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vcHVibGljL3NyYy9jc3Mvd2VhdGhlci5jc3Ncbi8vIG1vZHVsZSBpZCA9IDExXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///11\n')},,function(module,exports,__webpack_require__){"use strict";eval("\n\nvar app = {\n\tisLoading: true,\n\tvisibleCards: {},\n\tselectedCities: [],\n\tspinner: document.querySelector('.loader'),\n\tcardTemplate: document.querySelector('.cardTemplate'),\n\tcontainer: document.querySelector('.main'),\n\taddDialog: document.querySelector('.dialog-container'),\n\tdaysOfWeek: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n};\n\ndocument.getElementById('butAdd').addEventListener('click', function () {\n\tapp.toggleAddDialog(true);\n});\n\ndocument.getElementById('butAddCancel').addEventListener('click', function () {\n\tapp.toggleAddDialog(false);\n});\n\ndocument.getElementById('butRefresh').addEventListener('click', function () {\n\tapp.updateForecasts();\n});\n\ndocument.getElementById('butAddCity').addEventListener('click', function () {\n\tvar select = document.getElementById('selectCityToAdd');\n\tvar selected = select.options[select.selectedIndex];\n\tvar key = selected.value;\n\tvar label = selected.textContent;\n\n\tif (!app.selectedCities) {\n\t\tapp.selectedCities = [];\n\t}\n\n\tapp.getForecast(key, label);\n\tapp.selectedCities.push({\n\t\tkey: key,\n\t\tlabel: label\n\t});\n\tapp.saveSelectedCities();\n\tapp.toggleAddDialog(false);\n});\n\napp.toggleAddDialog = function (visible) {\n\tif (visible) {\n\t\tapp.addDialog.classList.add('dialog-container--visible');\n\t} else {\n\t\tapp.addDialog.classList.remove('dialog-container--visible');\n\t}\n};\n\napp.getForecast = function (key, label) {\n\tvar statment = 'select * from weather.forecast where woeid=' + key;\n\tvar url = 'https://query.yahooapis.com/v1/public/yql?format=json&q=' + statment;\n\n\tfetch(url).then(function (response) {\n\t\tif (response.status !== 200) {\n\t\t\tconsole.log('Looks like there was a problem. Status code: ' + response.status);\n\t\t\treturn;\n\t\t}\n\n\t\tresponse.json().then(function (data) {\n\t\t\tvar results = data.query.results;\n\t\t\tresults.key = key;\n\t\t\tresults.label = label;\n\t\t\tresults.created = data.query.created;\n\n\t\t\tapp.updateForecastCard(results);\n\t\t});\n\t}).catch(function (err) {\n\t\tconsole.log('Fetch Error :-S', err);\n\t});\n};\n\napp.updateForecasts = function () {\n\tvar keys = Object.keys(app.visibleCards);\n\tkeys.forEach(function (key) {\n\t\tapp.getForecast(key);\n\t});\n};\n\napp.updateForecastCard = function (results) {\n\tconsole.log(results);\n\n\tvar dataLastUpdated = new Date(results.created);\n\tvar sunrise = results.channel.astronomy.sunrise;\n\tvar sunset = results.channel.astronomy.sunset;\n\tvar current = results.channel.item.condition;\n\tvar humidity = results.channel.atmosphere.humidity;\n\tvar wind = results.channel.wind;\n\n\tvar card = app.visibleCards[results.key];\n\n\tif (!card) {\n\t\tcard = app.cardTemplate.cloneNode(true);\n\t\tcard.classList.remove('cardTemplate');\n\t\tcard.querySelector('.location').textContent = results.label;\n\t\tcard.removeAttribute('hidden');\n\t\tapp.container.appendChild(card);\n\t\tapp.visibleCards[results.key] = card;\n\t}\n\n\tvar cardLastUpdatedElem = card.querySelector('.card-last-updated');\n\tvar cardLastUpdated = cardLastUpdatedElem.textContent;\n\n\tif (cardLastUpdated) {\n\t\tcardLastUpdated = new Date(cardLastUpdated);\n\n\t\tif (dataLastUpdated.getTime() < cardLastUpdated.getTime()) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\tcardLastUpdatedElem.textContent = results.created;\n\n\tcard.querySelector('.description').textContent = current.text;\n\tcard.querySelector('.date').textContent = current.date;\n\tcard.querySelector('.current .icon').classList.add(app.getIconClass(current.code));\n\tcard.querySelector('.current .temperature .value').textContent = Math.round(current.temp);\n\tcard.querySelector('.current .sunrise').textContent = sunrise;\n\tcard.querySelector('.current .sunset').textContent = sunset;\n\tcard.querySelector('.current .humidity').textContent = Math.round(humidity) + '%';\n\tcard.querySelector('.current .wind .value').textContent = Math.round(wind.speed);\n\tcard.querySelector('.current .wind .direction').textContent = wind.direction;\n\n\tvar nextDays = card.querySelectorAll('.future .oneday');\n\tvar today = new Date();\n\ttoday = today.getDate();\n\n\tfor (var i = 0; i < 7; i++) {\n\t\tvar nextDay = nextDays[i];\n\t\tvar daily = results.channel.item.forecast[i];\n\n\t\tif (daily && nextDay) {\n\t\t\tnextDay.querySelector('.date').textContent = app.daysOfWeek[(i + today) % 7];\n\t\t\tnextDay.querySelector('.icon').classList.add(app.getIconClass(daily.code));\n\t\t\tnextDay.querySelector('.temp-high .value').textContent = Math.round(daily.high);\n\t\t\tnextDay.querySelector('.temp-low .value').textContent = Math.round(daily.low);\n\t\t}\n\t}\n\n\tif (app.isLoading) {\n\t\tapp.spinner.setAttribute('hidden', true);\n\t\tapp.container.removeAttribute('hidden');\n\t\tapp.isLoading = false;\n\t}\n};\n\napp.saveSelectedCities = function () {\n\tvar selectedCities = JSON.stringify(app.selectedCities);\n\tlocalStorage.selectedCities = selectedCities;\n};\n\napp.getIconClass = function (weatherCode) {\n\tweatherCode = parseInt(weatherCode);\n\tswitch (weatherCode) {\n\t\tcase 25: // cold\n\t\tcase 32: // sunny\n\t\tcase 33: // fair (night)\n\t\tcase 34: // fair (day)\n\t\tcase 36: // hot\n\t\tcase 3200:\n\t\t\t// not available\n\t\t\treturn 'clear-day';\n\t\tcase 0: // tornado\n\t\tcase 1: // tropical storm\n\t\tcase 2: // hurricane\n\t\tcase 6: // mixed rain and sleet\n\t\tcase 8: // freezing drizzle\n\t\tcase 9: // drizzle\n\t\tcase 10: // freezing rain\n\t\tcase 11: // showers\n\t\tcase 12: // showers\n\t\tcase 17: // hail\n\t\tcase 35: // mixed rain and hail\n\t\tcase 40:\n\t\t\t// scattered showers\n\t\t\treturn 'rain';\n\t\tcase 3: // severe thunderstorms\n\t\tcase 4: // thunderstorms\n\t\tcase 37: // isolated thunderstorms\n\t\tcase 38: // scattered thunderstorms\n\t\tcase 39: // scattered thunderstorms (not a typo)\n\t\tcase 45: // thundershowers\n\t\tcase 47:\n\t\t\t// isolated thundershowers\n\t\t\treturn 'thunderstorms';\n\t\tcase 5: // mixed rain and snow\n\t\tcase 7: // mixed snow and sleet\n\t\tcase 13: // snow flurries\n\t\tcase 14: // light snow showers\n\t\tcase 16: // snow\n\t\tcase 18: // sleet\n\t\tcase 41: // heavy snow\n\t\tcase 42: // scattered snow showers\n\t\tcase 43: // heavy snow\n\t\tcase 46:\n\t\t\t// snow showers\n\t\t\treturn 'snow';\n\t\tcase 15: // blowing snow\n\t\tcase 19: // dust\n\t\tcase 20: // foggy\n\t\tcase 21: // haze\n\t\tcase 22:\n\t\t\t// smoky\n\t\t\treturn 'fog';\n\t\tcase 24: // windy\n\t\tcase 23:\n\t\t\t// blustery\n\t\t\treturn 'windy';\n\t\tcase 26: // cloudy\n\t\tcase 27: // mostly cloudy (night)\n\t\tcase 28: // mostly cloudy (day)\n\t\tcase 31:\n\t\t\t// clear (night)\n\t\t\treturn 'cloudy';\n\t\tcase 29: // partly cloudy (night)\n\t\tcase 30: // partly cloudy (day)\n\t\tcase 44:\n\t\t\t// partly cloudy\n\t\t\treturn 'partly-cloudy-day';\n\t}\n};\n\napp.selectedCities = localStorage.selectedCities;\nif (app.selectedCities) {\n\tapp.selectedCities = JSON.parse(app.selectedCities);\n\tapp.selectedCities.forEach(function (city) {\n\t\tapp.getForecast(city.key, city.label);\n\t});\n} else {\n\tconsole.log('[Fake city]');\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///13\n")}]);